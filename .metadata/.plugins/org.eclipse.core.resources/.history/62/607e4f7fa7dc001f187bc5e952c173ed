package TestCases;

import java.time.Duration;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;

import PageObjects.HomePage;
import TestComponents.BaseTest;

public class Optimised_Code extends BaseTest {

	public static void main(String[] args) throws InterruptedException {
		// TODO Auto-generated method stub

		ChromeDriver driver = invokeDriver();
		
		double queryRating = 3.0;
		int castRating = (int) queryRating;
		
		HomePage homePage = new HomePage();
		homePage.landingPage();
		homePage.searchBox();
		
		SearchPage searchPage = new SearchPage();
		
		//wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.cssSelector("div[class='suthUA'] select[class='Gn+jFg']"))));
		Select minPrice = new Select(driver.findElement(By.cssSelector("div[class='suthUA'] select[class='Gn+jFg']"))); //range filter
		minPrice.selectByValue("75000");
		Select maxPrice = new Select(driver.findElement(By.cssSelector("div[class='tKgS7w'] select[class='Gn+jFg']")));
		maxPrice.selectByVisibleText("₹75000+");
		Thread.sleep(1000);
		
		// Customer Ratings
		//wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath("//div[contains(@title,'3')]"))));
		driver.findElement(By.xpath("//div[contains(@title,'"+castRating+"★')]")).click();
		Thread.sleep(1000);
		
		// Price high to low
		//wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.xpath("//div[text()='Price -- High to Low']"))));
		driver.findElement(By.xpath("//div[text()='Price -- High to Low']")).click();
		Thread.sleep(1000);
		
		// Applied Filters
		List<WebElement> filtersApplied = driver.findElements(By.cssSelector(".YcSYyC"));
		
		List<WebElement> prices = driver.findElements(By.cssSelector(".Nx9bqj._4b5DiR"));
		
		List<WebElement> ratings = driver.findElements(By.cssSelector(".XQDdHH"));
		for(int i=1; i<=ratings.size(); i++) {
			double pdtRating = Double.parseDouble((driver.findElement(By.xpath("(//div[@class='XQDdHH'])["+i+"]")).getText()));
			if(pdtRating < queryRating) {
				System.out.println(driver.findElement(By.xpath("(//div[@class='KzDlHZ'])["+i+"]")).getText());
			}
		//	System.out.println(pdtRating);
		}
		
		// sorting verification
		String expectedSort = driver.findElement(By.cssSelector(".zg-M3Z._0H7xSG")).getText();
		Assert.assertEquals(expectedSort, "Price -- High to Low");
		
	//	driver.close();
	}

}


/*  ### **Scenario 2: Validate Search Functionality with Filters**  
**Steps:**  
1. Search for a product category (e.g., "Laptops").  
2. Apply filters (e.g., brand, price range, customer ratings).  
3. Verify that the results reflect the selected filters.  
4. Sort the products by price (low to high).  

**Validation Points:**  
- Filters are applied correctly.  
- Sorting works as expected.  
- Product details match the filter criteria.   */