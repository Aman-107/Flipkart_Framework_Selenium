package TestCases;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;

import PageObjects.HomePage;
import PageObjects.SearchPage;
import TestComponents.BaseTest;

public class Optimised_Code extends BaseTest {

	public static void main(String[] args) throws InterruptedException {
		// TODO Auto-generated method stub

		ChromeDriver driver = invokeDriver();

		double queryRating = 3.0;
		int castRating = (int) queryRating;

		HomePage homePage = new HomePage(driver);
		homePage.landingPage();
		homePage.searchBox();

		SearchPage searchPage = new SearchPage(driver);
		searchPage.brandsFilter();
		searchPage.priceFilter("50000", "₹75000+");
		searchPage.customerRatingFilter(castRating); // Customer Ratings
		searchPage.sorting(); // Price high to low

		// Applied Filters
		List<WebElement> filtersApplied = driver.findElements(By.cssSelector(".YcSYyC"));

		List<WebElement> prices = driver.findElements(By.cssSelector(".Nx9bqj._4b5DiR"));
		for (int i = 1; i <= prices.size(); i++) {
			String rawPrice = driver.findElement(By.cssSelector(".Nx9bqj._4b5DiR")).getText().split("₹")[1]; // System.out.println(rawPrice);
			int compaPrice = 0;
			int price = Integer.parseInt(rawPrice.replace(",", "")); // System.out.println(price);
			
			if(compaPrice > price) {
				System.out.println("sorting not working at:" + driver.findElement(By.xpath("(//div[@class='KzDlHZ'])[" + i + "]")).getText());
			}
		}
		
		// verifying ratings
		List<WebElement> ratings = driver.findElements(By.cssSelector(".XQDdHH"));
		for (int i = 1; i <= ratings.size(); i++) {
			double pdtRating = Double
					.parseDouble((driver.findElement(By.xpath("(//div[@class='XQDdHH'])[" + i + "]")).getText()));
			if (pdtRating < queryRating) {
				System.out.println(driver.findElement(By.xpath("(//div[@class='KzDlHZ'])[" + i + "]")).getText());
			}
		//	System.out.println(pdtRating);
		}

		// sorting verification
		String expectedSort = driver.findElement(By.cssSelector(".zg-M3Z._0H7xSG")).getText();
		Assert.assertEquals(expectedSort, "Price -- High to Low");

		// driver.close();
	}

}

/*
 * ### **Scenario 2: Validate Search Functionality with Filters** Steps:** 1.
 * Search for a product category (e.g., "Laptops"). 2. Apply filters (e.g.,
 * brand, price range, customer ratings). 3. Verify that the results reflect the
 * selected filters. 4. Sort the products by price (low to high).
 ** 
 * Validation Points:** - Filters are applied correctly. - Sorting works as
 * expected. - Product details match the filter criteria.
 */